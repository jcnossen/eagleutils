//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.0.30319.17929.
// 
namespace EagleXML {
    using System.Xml.Serialization;
    
    public partial class eagle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public compatibility compatibility;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public drawing drawing;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compatibility", Order=2)]
        public compatibility compatibility1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version;
    }
    
    public partial class compatibility {
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("note")]
        public note[] note;
    }
    
    /// <remarks/>
    public partial class note {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public noteSeverity severity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>



    public enum noteSeverity {
        
        /// <remarks/>
        info,
        
        /// <remarks/>
        warning,
        
        /// <remarks/>
        error,
    }
    
    /// <remarks/>
    public partial class drawing {
        
        /// <remarks/>
        public settings settings;
        
        /// <remarks/>
        public grid grid;
        
        /// <remarks/>
        public layers layers;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("board", typeof(board))]
        [System.Xml.Serialization.XmlElementAttribute("library", typeof(library))]
        [System.Xml.Serialization.XmlElementAttribute("schematic", typeof(schematic))]
        public object Item;
    }
    
    public partial class settings {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("setting")]
        public setting[] setting;
    }
    
    public partial class setting {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public settingAlwaysvectorfont alwaysvectorfont;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alwaysvectorfontSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(settingVerticaltext.up)]
        public settingVerticaltext verticaltext;
        
        public setting() {
            this.verticaltext = settingVerticaltext.up;
        }
    }
    
    /// <remarks/>



    public enum settingAlwaysvectorfont {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum settingVerticaltext {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
    }
    
    /// <remarks/>






    public partial class grid {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string distance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public gridUnitdist unitdist;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitdistSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public gridUnit unit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(gridStyle.lines)]
        public gridStyle style;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("1")]
        public string multiple;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(gridDisplay.no)]
        public gridDisplay display;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string altdistance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public gridAltunitdist altunitdist;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altunitdistSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public gridAltunit altunit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altunitSpecified;
        
        public grid() {
            this.style = gridStyle.lines;
            this.multiple = "1";
            this.display = gridDisplay.no;
        }
    }
    
    /// <remarks/>



    public enum gridUnitdist {
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        inch,
    }
    
    /// <remarks/>



    public enum gridUnit {
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        inch,
    }
    
    /// <remarks/>



    public enum gridStyle {
        
        /// <remarks/>
        lines,
        
        /// <remarks/>
        dots,
    }
    
    /// <remarks/>



    public enum gridDisplay {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum gridAltunitdist {
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        inch,
    }
    
    /// <remarks/>



    public enum gridAltunit {
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        inch,
    }
    
    public partial class layers {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("layer")]
        public layer[] layer;
    }
    
    public partial class layer {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int number;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string color;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string fill;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(layerVisible.yes)]
        public layerVisible visible;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(layerActive.yes)]
        public layerActive active;
        
        public layer() {
            this.visible = layerVisible.yes;
            this.active = layerActive.yes;
        }
    }
    
    /// <remarks/>



    public enum layerVisible {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>


    public enum layerActive {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>




//
//
    public partial class board {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("circle", typeof(circle), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("dimension", typeof(dimension), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("frame", typeof(frame), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("hole", typeof(hole), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("polygon", typeof(polygon), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("rectangle", typeof(rectangle), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("text", typeof(text), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("wire", typeof(wire), IsNullable=false)]
        public object[] plain;
        
        /// <remarks/>
        public libraries libraries;
        
        /// <remarks/>
        public attributes attributes;
        
        /// <remarks/>
        public variantdefs variantdefs;
        
        /// <remarks/>
        public classes classes;
        
        /// <remarks/>
        public designrules designrules;
        
        /// <remarks/>
        public autorouter autorouter;
        
        /// <remarks/>
        public elements elements;
        
        /// <remarks/>
        public signals signals;
        
        /// <remarks/>
        public errors errors;
	}
    
    /// <remarks/>






    public partial class description {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("en")]
        public string language;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
        
        public description() {
            this.language = "en";
        }
    }
    
    /// <remarks/>






    public partial class circle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float radius;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
    }
    
    /// <remarks/>






    public partial class dimension {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x3;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y3;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(dimensionDtype.parallel)]
        public dimensionDtype dtype;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string extwidth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string extlength;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string extoffset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string textsize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("8")]
        public string textratio;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(dimensionUnit.mm)]
        public dimensionUnit unit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("2")]
        public string precision;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(dimensionVisible.no)]
        public dimensionVisible visible;
        
        public dimension() {
            this.dtype = dimensionDtype.parallel;
            this.extwidth = "0";
            this.extlength = "0";
            this.extoffset = "0";
            this.textratio = "8";
            this.unit = dimensionUnit.mm;
            this.precision = "2";
            this.visible = dimensionVisible.no;
        }
    }
    
    /// <remarks/>



    public enum dimensionDtype {
        
        /// <remarks/>
        parallel,
        
        /// <remarks/>
        horizontal,
        
        /// <remarks/>
        vertical,
        
        /// <remarks/>
        radius,
        
        /// <remarks/>
        diameter,
        
        /// <remarks/>
        leader,
    }
    
    /// <remarks/>



    public enum dimensionUnit {
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        inch,
    }
    
    /// <remarks/>



    public enum dimensionVisible {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class frame {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string x1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string y1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string x2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string y2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string columns;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rows;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("border-left")]
        [System.ComponentModel.DefaultValueAttribute(frameBorderleft.yes)]
        public frameBorderleft borderleft;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("border-top")]
        [System.ComponentModel.DefaultValueAttribute(frameBordertop.yes)]
        public frameBordertop bordertop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("border-right")]
        [System.ComponentModel.DefaultValueAttribute(frameBorderright.yes)]
        public frameBorderright borderright;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("border-bottom")]
        [System.ComponentModel.DefaultValueAttribute(frameBorderbottom.yes)]
        public frameBorderbottom borderbottom;
        
        public frame() {
            this.borderleft = frameBorderleft.yes;
            this.bordertop = frameBordertop.yes;
            this.borderright = frameBorderright.yes;
            this.borderbottom = frameBorderbottom.yes;
        }
    }
    
    /// <remarks/>



    public enum frameBorderleft {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum frameBordertop {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum frameBorderright {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum frameBorderbottom {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class hole {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float drill;
    }
    
    /// <remarks/>






    public partial class polygon {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vertex")]
        public vertex[] vertex;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float spacing;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(polygonPour.solid)]
        public polygonPour pour;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float isolate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(polygonOrphans.no)]
        public polygonOrphans orphans;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(polygonThermals.yes)]
        public polygonThermals thermals;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string rank;
        
        public polygon() {
            this.pour = polygonPour.solid;
            this.orphans = polygonOrphans.no;
            this.thermals = polygonThermals.yes;
            this.rank = "0";
        }
    }
    
    /// <remarks/>






    public partial class vertex {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public float curve;
        
        public vertex() {
            this.curve = 0;
        }
    }
    
    /// <remarks/>



    public enum polygonPour {
        
        /// <remarks/>
        solid,
        
        /// <remarks/>
        hatch,
        
        /// <remarks/>
        cutout,
    }
    
    /// <remarks/>



    public enum polygonOrphans {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum polygonThermals {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class rectangle {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        public rectangle() {
            this.rot = "R0";
        }
    }
    
    /// <remarks/>






    public partial class text {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float size;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(textFont.proportional)]
        public textFont font;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("8")]
        public string ratio;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(textAlign.bottomleft)]
        public textAlign align;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("50")]
        public string distance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
        
        public text() {
            this.font = textFont.proportional;
            this.ratio = "8";
            this.rot = "R0";
            this.align = textAlign.bottomleft;
            this.distance = "50";
        }
    }
    
    /// <remarks/>



    public enum textFont {
        
        /// <remarks/>
        vector,
        
        /// <remarks/>
        proportional,
        
        /// <remarks/>
        @fixed,
    }
    
    /// <remarks/>



    public enum textAlign {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom-left")]
        bottomleft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom-center")]
        bottomcenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom-right")]
        bottomright,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("center-left")]
        centerleft,
        
        /// <remarks/>
        center,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("center-right")]
        centerright,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top-left")]
        topleft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top-center")]
        topcenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top-right")]
        topright,
    }
    
    /// <remarks/>






    public partial class wire {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string extent;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wireStyle.continuous)]
        public wireStyle style;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string curve;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wireCap.round)]
        public wireCap cap;
        
        public wire() {
            this.style = wireStyle.continuous;
            this.curve = "0";
            this.cap = wireCap.round;
        }
    }
    
    /// <remarks/>



    public enum wireStyle {
        
        /// <remarks/>
        continuous,
        
        /// <remarks/>
        longdash,
        
        /// <remarks/>
        shortdash,
        
        /// <remarks/>
        dashdot,
    }
    
    /// <remarks/>



    public enum wireCap {
        
        /// <remarks/>
        flat,
        
        /// <remarks/>
        round,
    }
    
    /// <remarks/>






    public partial class libraries {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("library")]
        public library[] library;
    }
    
    /// <remarks/>






    public partial class library {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        public packages packages;
        
        /// <remarks/>
        public symbols symbols;
        
        /// <remarks/>
        public devicesets devicesets;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }
    
    /// <remarks/>
    public partial class packages {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("package")]
        public package[] package;
    }
    
    /// <remarks/>
    public partial class package {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("circle", typeof(circle))]
        [System.Xml.Serialization.XmlElementAttribute("dimension", typeof(dimension))]
        [System.Xml.Serialization.XmlElementAttribute("frame", typeof(frame))]
        [System.Xml.Serialization.XmlElementAttribute("hole", typeof(hole))]
        [System.Xml.Serialization.XmlElementAttribute("pad", typeof(pad))]
        [System.Xml.Serialization.XmlElementAttribute("polygon", typeof(polygon))]
        [System.Xml.Serialization.XmlElementAttribute("rectangle", typeof(rectangle))]
        [System.Xml.Serialization.XmlElementAttribute("smd", typeof(smd))]
        [System.Xml.Serialization.XmlElementAttribute("text", typeof(text))]
        [System.Xml.Serialization.XmlElementAttribute("wire", typeof(wire))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
	}
    
    /// <remarks/>
    public partial class pad {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float drill;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public float diameter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(padShape.round)]
        public padShape shape;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(padStop.yes)]
        public padStop stop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(padThermals.yes)]
        public padThermals thermals;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(padFirst.no)]
        public padFirst first;
        
        public pad() {
            this.diameter = 0;
            this.shape = padShape.round;
            this.rot = "R0";
            this.stop = padStop.yes;
            this.thermals = padThermals.yes;
            this.first = padFirst.no;
        }
    }
    
    /// <remarks/>
    public enum padShape {
        
        /// <remarks/>
        square,
        
        /// <remarks/>
        round,
        
        /// <remarks/>
        octagon,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        offset,
    }
    
    /// <remarks/>



    public enum padStop {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum padThermals {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum padFirst {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>
    public partial class smd {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float dx;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float dy;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public float roundness;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(smdStop.yes)]
        public smdStop stop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(smdThermals.yes)]
        public smdThermals thermals;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(smdCream.yes)]
        public smdCream cream;
        
        public smd() {
            this.roundness = 0;
            this.rot = "R0";
            this.stop = smdStop.yes;
            this.thermals = smdThermals.yes;
            this.cream = smdCream.yes;
        }
    }
    
    /// <remarks/>



    public enum smdStop {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum smdThermals {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum smdCream {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class symbols {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("symbol")]
        public symbol[] symbol;
    }
    
    /// <remarks/>






    public partial class symbol {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("circle", typeof(circle))]
        [System.Xml.Serialization.XmlElementAttribute("dimension", typeof(dimension))]
        [System.Xml.Serialization.XmlElementAttribute("frame", typeof(frame))]
        [System.Xml.Serialization.XmlElementAttribute("pin", typeof(pin))]
        [System.Xml.Serialization.XmlElementAttribute("polygon", typeof(polygon))]
        [System.Xml.Serialization.XmlElementAttribute("rectangle", typeof(rectangle))]
        [System.Xml.Serialization.XmlElementAttribute("text", typeof(text))]
        [System.Xml.Serialization.XmlElementAttribute("wire", typeof(wire))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }
    
    /// <remarks/>






    public partial class pin {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(pinVisible.both)]
        public pinVisible visible;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(pinLength.@long)]
        public pinLength length;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(pinDirection.io)]
        public pinDirection direction;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(pinFunction.none)]
        public pinFunction function;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string swaplevel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        public pin() {
            this.visible = pinVisible.both;
            this.length = pinLength.@long;
            this.direction = pinDirection.io;
            this.function = pinFunction.none;
            this.swaplevel = "0";
            this.rot = "R0";
        }
    }
    
    /// <remarks/>



    public enum pinVisible {
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        pad,
        
        /// <remarks/>
        pin,
        
        /// <remarks/>
        both,
    }
    
    /// <remarks/>



    public enum pinLength {
        
        /// <remarks/>
        point,
        
        /// <remarks/>
        @short,
        
        /// <remarks/>
        middle,
        
        /// <remarks/>
        @long,
    }
    
    /// <remarks/>



    public enum pinDirection {
        
        /// <remarks/>
        nc,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        @out,
        
        /// <remarks/>
        io,
        
        /// <remarks/>
        oc,
        
        /// <remarks/>
        pwr,
        
        /// <remarks/>
        pas,
        
        /// <remarks/>
        hiz,
        
        /// <remarks/>
        sup,
    }
    
    /// <remarks/>



    public enum pinFunction {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        dot,
        
        /// <remarks/>
        clk,
        
        /// <remarks/>
        dotclk,
    }
    
    /// <remarks/>






    public partial class devicesets {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceset")]
        public deviceset[] deviceset;
    }
    
    /// <remarks/>






    public partial class deviceset {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        public gates gates;
        
        /// <remarks/>
        public devices devices;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string prefix;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(devicesetUservalue.no)]
        public devicesetUservalue uservalue;
        
        public deviceset() {
            this.prefix = "";
            this.uservalue = devicesetUservalue.no;
        }
    }
    
    /// <remarks/>






    public partial class gates {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gate")]
        public gate[] gate;
    }
    
    /// <remarks/>






    public partial class gate {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string symbol;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(gateAddlevel.next)]
        public gateAddlevel addlevel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string swaplevel;
        
        public gate() {
            this.addlevel = gateAddlevel.next;
            this.swaplevel = "0";
        }
    }
    
    /// <remarks/>



    public enum gateAddlevel {
        
        /// <remarks/>
        must,
        
        /// <remarks/>
        can,
        
        /// <remarks/>
        next,
        
        /// <remarks/>
        request,
        
        /// <remarks/>
        always,
    }
    
    /// <remarks/>






    public partial class devices {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("device")]
        public device[] device;
    }
    
    /// <remarks/>






    public partial class device {
        
        /// <remarks/>
        public connects connects;
        
        /// <remarks/>
        public technologies technologies;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string package;
        
        public device() {
            this.name = "";
        }
    }
    
    /// <remarks/>






    public partial class connects {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("connect")]
        public connect[] connect;
    }
    
    /// <remarks/>






    public partial class connect {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string gate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pin;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pad;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(connectRoute.all)]
        public connectRoute route;
        
        public connect() {
            this.route = connectRoute.all;
        }
    }
    
    /// <remarks/>



    public enum connectRoute {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        any,
    }
    
    /// <remarks/>






    public partial class technologies {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("technology")]
        public technology[] technology;
    }
    
    /// <remarks/>






    public partial class technology {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public technologyAttribute[] attributes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }
    
    /// <remarks/>





	public partial class technologyAttribute
	{

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public string name;

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public string value;
	}

    public partial class attribute {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float size;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public attributeFont font;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fontSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ratio;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(attributeDisplay.value)]
        public attributeDisplay display;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(attributeConstant.no)]
        public attributeConstant constant;
        
        public attribute() {
            this.rot = "R0";
            this.display = attributeDisplay.value;
            this.constant = attributeConstant.no;
        }
    }
    
    /// <remarks/>



    public enum attributeFont {
        
        /// <remarks/>
        vector,
        
        /// <remarks/>
        proportional,
        
        /// <remarks/>
        @fixed,
    }
    
    /// <remarks/>



    public enum attributeDisplay {
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        value,
        
        /// <remarks/>
        name,
        
        /// <remarks/>
        both,
    }
    
    /// <remarks/>



    public enum attributeConstant {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum devicesetUservalue {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class attributes {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public attribute[] attribute;
    }
    
    /// <remarks/>






    public partial class variantdefs {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("variantdef")]
        public variantdef[] variantdef;
    }
    
    /// <remarks/>






    public partial class variantdef {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(variantdefCurrent.no)]
        public variantdefCurrent current;
        
        public variantdef() {
            this.current = variantdefCurrent.no;
        }
    }
    
    /// <remarks/>



    public enum variantdefCurrent {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class classes {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("class")]
        public @class[] @class;
    }
    
    /// <remarks/>






    public partial class @class {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("clearance")]
        public clearance[] clearance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string number;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string drill;
        
        public @class() {
            this.width = "0";
            this.drill = "0";
        }
    }
    
    /// <remarks/>






    public partial class clearance {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string value;
        
        public clearance() {
            this.value = "0";
        }
    }
    
    /// <remarks/>






    public partial class designrules {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("description")]
        public description[] description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public param[] param;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }
    
    /// <remarks/>






    public partial class param {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
    }
    
    /// <remarks/>






    public partial class autorouter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pass")]
        public pass[] pass;
    }
    
    /// <remarks/>






    public partial class pass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public param[] param;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string refer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(passActive.yes)]
        public passActive active;
        
        public pass() {
            this.active = passActive.yes;
        }
    }
    
    /// <remarks/>



    public enum passActive {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class elements {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("element")]
        public element[] element;
    }
    
    /// <remarks/>






    public partial class element {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public attribute[] attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("variant")]
        public variant[] variant;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string library;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string package;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(elementLocked.no)]
        public elementLocked locked;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(elementPopulate.yes)]
        public elementPopulate populate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(elementSmashed.no)]
        public elementSmashed smashed;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        public element() {
            this.locked = elementLocked.no;
            this.populate = elementPopulate.yes;
            this.smashed = elementSmashed.no;
            this.rot = "R0";
        }
	}
    
    /// <remarks/>






    public partial class variant {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(variantPopulate.yes)]
        public variantPopulate populate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string technology;
        
        public variant() {
            this.populate = variantPopulate.yes;
        }
    }
    
    /// <remarks/>



    public enum variantPopulate {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum elementLocked {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum elementPopulate {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum elementSmashed {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class signals {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("signal")]
        public signal[] signal;
    }
    
    /// <remarks/>






    public partial class signal {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contactref", typeof(contactref))]
        [System.Xml.Serialization.XmlElementAttribute("polygon", typeof(polygon))]
        [System.Xml.Serialization.XmlElementAttribute("via", typeof(via))]
        [System.Xml.Serialization.XmlElementAttribute("wire", typeof(wire))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string @class;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(signalAirwireshidden.no)]
        public signalAirwireshidden airwireshidden;
        
        public signal() {
            this.@class = "0";
            this.airwireshidden = signalAirwireshidden.no;
        }
    }
    
    /// <remarks/>






    public partial class contactref {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string element;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pad;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(contactrefRoute.all)]
        public contactrefRoute route;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string routetag;
        
        public contactref() {
            this.route = contactrefRoute.all;
            this.routetag = "";
        }
    }
    
    /// <remarks/>



    public enum contactrefRoute {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        any,
    }
    
    /// <remarks/>






    public partial class via {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string extent;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float drill;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string diameter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(viaShape.round)]
        public viaShape shape;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(viaAlwaysstop.no)]
        public viaAlwaysstop alwaysstop;
        
        public via() {
            this.diameter = "0";
            this.shape = viaShape.round;
            this.alwaysstop = viaAlwaysstop.no;
        }
    }
    
    /// <remarks/>



    public enum viaShape {
        
        /// <remarks/>
        square,
        
        /// <remarks/>
        round,
        
        /// <remarks/>
        octagon,
    }
    
    /// <remarks/>



    public enum viaAlwaysstop {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>



    public enum signalAirwireshidden {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class errors {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("approved")]
        public approved[] approved;
    }
    
    /// <remarks/>






    public partial class approved {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string hash;
    }
    
    /// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    //[System.SerializableAttribute()]
   // [System.Diagnostics.DebuggerStepThroughAttribute()]
 //   [System.ComponentModel.DesignerCategoryAttribute("code")]
//
   // [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/eagle", IsNullable=false)]
    public partial class schematic {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        public libraries libraries;
        
        /// <remarks/>
        public attributes attributes;
        
        /// <remarks/>
        public variantdefs variantdefs;
        
        /// <remarks/>
        public classes classes;
        
        /// <remarks/>
        public modules modules;
        
        /// <remarks/>
        public parts parts;
        
        /// <remarks/>
        public sheets sheets;
        
        /// <remarks/>
        public errors errors;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string xreflabel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string xrefpart;

		internal void Update()
		{

		}
	}
    
    /// <remarks/>






    public partial class modules {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("module")]
        public module[] module;
    }
    
    /// <remarks/>






    public partial class module {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        public ports ports;
        
        /// <remarks/>
        public variantdefs variantdefs;
        
        /// <remarks/>
        public parts parts;
        
        /// <remarks/>
        public sheets sheets;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string prefix;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dx;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dy;
        
        public module() {
            this.prefix = "";
        }
    }
    
    /// <remarks/>






    public partial class ports {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("port")]
        public port[] port;
    }
    
    /// <remarks/>






    public partial class port {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string side;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string coord;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(portDirection.io)]
        public portDirection direction;
        
        public port() {
            this.direction = portDirection.io;
        }
    }
    
    /// <remarks/>



    public enum portDirection {
        
        /// <remarks/>
        nc,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        @out,
        
        /// <remarks/>
        io,
        
        /// <remarks/>
        oc,
        
        /// <remarks/>
        pwr,
        
        /// <remarks/>
        pas,
        
        /// <remarks/>
        hiz,
    }
    
    /// <remarks/>






    public partial class parts {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("part")]
        public part[] part;
    }
    
    /// <remarks/>






    public partial class part {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public attribute[] attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("variant")]
        public variant[] variant;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string library;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deviceset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string device;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string technology;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        public part() {
            this.technology = "";
        }
    }
    
    /// <remarks/>






    public partial class sheets {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sheet")]
        public sheet[] sheet;
    }
    
    /// <remarks/>






    public partial class sheet {
        
        /// <remarks/>
        public description description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("circle", typeof(circle), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("dimension", typeof(dimension), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("frame", typeof(frame), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("hole", typeof(hole), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("polygon", typeof(polygon), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("rectangle", typeof(rectangle), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("text", typeof(text), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("wire", typeof(wire), IsNullable=false)]
        public object[] plain;
        
        /// <remarks/>
        public moduleinsts moduleinsts;
        
        /// <remarks/>
        public instances instances;
        
        /// <remarks/>
        public busses busses;
        
        /// <remarks/>
        public nets nets;
    }
    
    /// <remarks/>






    public partial class moduleinsts {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("moduleinst")]
        public moduleinst[] moduleinst;
    }
    
    /// <remarks/>






    public partial class moduleinst {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public attribute[] attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string module;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string modulevariant;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string offset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(moduleinstSmashed.no)]
        public moduleinstSmashed smashed;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        public moduleinst() {
            this.modulevariant = "";
            this.offset = "0";
            this.smashed = moduleinstSmashed.no;
            this.rot = "R0";
        }
    }
    
    /// <remarks/>



    public enum moduleinstSmashed {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class instances {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("instance")]
        public instance[] instance;
    }
    
    /// <remarks/>






    public partial class instance {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attribute")]
        public attribute[] attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string part;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string gate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(instanceSmashed.no)]
        public instanceSmashed smashed;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        public instance() {
            this.smashed = instanceSmashed.no;
            this.rot = "R0";
        }
    }
    
    /// <remarks/>



    public enum instanceSmashed {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class busses {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bus")]
        public bus[] bus;
    }
    
    /// <remarks/>






    public partial class bus {
        
        /// <remarks/>
		[XmlElement("segment")]
        public segment[] segments;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }
    
    /// <remarks/>






    public partial class junction {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
    }
    
    /// <remarks/>






    public partial class label {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float size;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(labelFont.proportional)]
        public labelFont font;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("8")]
        public string ratio;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("R0")]
        public string rot;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(labelXref.no)]
        public labelXref xref;
        
        public label() {
            this.font = labelFont.proportional;
            this.ratio = "8";
            this.rot = "R0";
            this.xref = labelXref.no;
        }
    }
    
    /// <remarks/>



    public enum labelFont {
        
        /// <remarks/>
        vector,
        
        /// <remarks/>
        proportional,
        
        /// <remarks/>
        @fixed,
    }
    
    /// <remarks/>



    public enum labelXref {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        yes,
    }
    
    /// <remarks/>






    public partial class pinref {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string part;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string gate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pin;
    }
    
    /// <remarks/>






    public partial class portref {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string moduleinst;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string port;
    }
    
    /// <remarks/>






    public partial class nets {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("net")]
        public net[] net;
    }
    
    /// <remarks/>






    public partial class net {
        
        /// <remarks/>
		[XmlElement("segment")]
        public segment[] segments;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string @class;
        
        public net() {
            this.@class = "0";
        }
    }
    
    /// <remarks/>






    public partial class segment {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("junction", typeof(junction))]
        [System.Xml.Serialization.XmlElementAttribute("label", typeof(label))]
        [System.Xml.Serialization.XmlElementAttribute("pinref", typeof(pinref))]
        [System.Xml.Serialization.XmlElementAttribute("portref", typeof(portref))]
        [System.Xml.Serialization.XmlElementAttribute("wire", typeof(wire))]
        public object[] Items;
    }
    
    /// <remarks/>






    public partial class plain {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("circle", typeof(circle))]
        [System.Xml.Serialization.XmlElementAttribute("dimension", typeof(dimension))]
        [System.Xml.Serialization.XmlElementAttribute("frame", typeof(frame))]
        [System.Xml.Serialization.XmlElementAttribute("hole", typeof(hole))]
        [System.Xml.Serialization.XmlElementAttribute("polygon", typeof(polygon))]
        [System.Xml.Serialization.XmlElementAttribute("rectangle", typeof(rectangle))]
        [System.Xml.Serialization.XmlElementAttribute("text", typeof(text))]
        [System.Xml.Serialization.XmlElementAttribute("wire", typeof(wire))]
        public object[] Items;
    }
}
